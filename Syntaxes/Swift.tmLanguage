<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>swift</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bswift</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Swift</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#root</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.swift</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\A^(#!).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.swift</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.swift</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.swift</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.swift</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.swift</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.swift</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.playground.swift</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.swift</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.swift</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.swift</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.swift</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>///</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.swift</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.triple-slash.documentation.swift</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>//:</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.swift</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.double-slash.documentation.swift</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.swift</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^</string>
							<key>name</key>
							<string>comment.line.double-slash.swift</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>nested</key>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nested</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>compiler-control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(#)(if|elseif)\s+(false)\b.*?(?=$|//|/\*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.preprocessor.conditional.swift</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.swift</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.conditional.swift</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language.boolean.swift</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.block.preprocessor.swift</string>
					<key>end</key>
					<string>(?=^\s*(#(elseif|else|endif)\b))</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(#)(if|elseif)\s+</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.swift</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.conditional.swift</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s*(?://|/\*))|$</string>
					<key>name</key>
					<string>meta.preprocessor.conditional.swift</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(&amp;&amp;|\|\|)</string>
							<key>name</key>
							<string>keyword.operator.logical.swift</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(true|false)\b</string>
							<key>name</key>
							<string>constant.language.boolean.swift</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.condition.swift</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.swift</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.constant.platform.architecture.swift</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.swift</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(arch)\s*(\()\s*(?:(arm|arm64|powerpc64|powerpc64le|i386|x86_64|s390x)|\w+)\s*(\))</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.condition.swift</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.swift</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.constant.platform.os.swift</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.swift</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(os)\s*(\()\s*(?:(macOS|OSX|iOS|tvOS|watchOS|Android|Linux|FreeBSD|Windows|PS4)|\w+)\s*(\))</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(swift)\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.condition.swift</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.swift</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))|$</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.swift</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>&gt;=</string>
									<key>name</key>
									<string>keyword.operator.comparison.swift</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\b[0-9]+(?:\.[0-9]+)*\b</string>
									<key>name</key>
									<string>constant.numeric.swift</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.swift</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.conditional.swift</string>
						</dict>
						<key>3</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\S+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.swift</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(#)(else|endif)(.*?)(?=$|//|/\*)</string>
					<key>name</key>
					<string>meta.preprocessor.conditional.swift</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.preprocessor.swift</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.preprocessor.sourcelocation.swift</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.swift</string>
						</dict>
						<key>5</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(file)\s*(:)\s*(?=")</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>support.variable.parameter.swift</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.swift</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?!\G)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#literals</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(line)\s*(:)\s*([0-9]+)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>support.variable.parameter.swift</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.key-value.swift</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>constant.numeric.integer.swift</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?!\G)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>This should only allow strings</string>
											<key>include</key>
											<string>#literals</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.separator.parameters.swift</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\S+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.swift</string>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.swift</string>
						</dict>
						<key>7</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\S+</string>
									<key>name</key>
									<string>invalid.illegal.character-not-allowed-here.swift</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(#)(sourceLocation)((\()([^)]*)(\)))(.*?)(?=$|//|/\*)</string>
					<key>name</key>
					<string>meta.preprocessor.sourcelocation.swift</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#boolean</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnil\b</string>
					<key>name</key>
					<string>constant.language.nil.swift</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>object "literals" used in playgrounds</string>
					<key>match</key>
					<string>\B(?:#colorLiteral|#imageLiteral|#fileLiteral)\b</string>
					<key>name</key>
					<string>support.function.object-literal.swift</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>boolean</key>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.swift</string>
				</dict>
				<key>numeric</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>0.1, -4_2.5, 6.022e23, 10E-5</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)[0-9][0-9_]*(?:\.[0-9][0-9_]*)?(?:[eE][+\-]?[0-9][0-9_]*)?\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.float.decimal.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>-0x1.ap2_3, 0x31p-4</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)(0x\h[\h_]*)(?:\.\h[\h_]*)?[pP][+\-]?[0-9][0-9_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.float.hexadecimal.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x1p, 0x1p_2, 0x1.5pa, 0x1.1p+1f, 0x1pz</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)(0x\h[\h_]*)(?:\.\h[\h_]*)?(?:[pP][+\-]?\w*)\b(?!\.[0-9])</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.invalid-exponent.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x1.5w (note that 0x1.f may be a valid expression)</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)(0x\h[\h_]*)\.[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.missing-exponent.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>-.5, .2f (note that 1.-.5 may be a valid expression)</string>
							<key>match</key>
							<string>(?&lt;=\s|^)\-?\.[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.float.missing-leading-zero.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0b_0_1, 0x_1p+3q</string>
							<key>match</key>
							<string>(\B\-|\b)0[box]_[\h_]*(?:[pPeE][+-]?\w+)?[\w.]+</string>
							<key>name</key>
							<string>invalid.illegal.numeric.leading-underscore.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>tuple positional member: not really a numeric literal, but not invalid</string>
							<key>match</key>
							<string>(?&lt;=[^.]\.)[0-9][0-9_]*\b</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0b010, 0b1_0</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)0b[01][01_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.binary.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0o1, 0o7_3</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)0o[0-7][0-7_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.octal.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>02, 3_456</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)[0-9][0-9_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.decimal.swift</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>0x4, 0xF_7</string>
							<key>match</key>
							<string>(\B\-|\b)(?&lt;![^.]\.)0x\h[\h_]*\b(?!\.[0-9])</string>
							<key>name</key>
							<string>constant.numeric.integer.hexadecimal.swift</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\B\-|\b)[0-9][\w.]*</string>
							<key>name</key>
							<string>invalid.illegal.numeric.other.swift</string>
						</dict>
					</array>
				</dict>
				<key>string</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.swift</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.swift</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.swift</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\r|\n</string>
									<key>name</key>
									<string>invalid.illegal.returns-not-allowed.swift</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\[0\\tnr"']</string>
									<key>name</key>
									<string>constant.character.escape.swift</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\u\{\h{1,8}\}</string>
									<key>name</key>
									<string>constant.character.escape.unicode.swift</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.begin.swift</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>source.swift</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#root</string>
												</dict>
											</array>
										</dict>
										<key>5</key>
										<dict>
											<key>name</key>
											<string>punctuation.section.embedded.end.swift</string>
										</dict>
										<key>6</key>
										<dict>
											<key>name</key>
											<string>source.swift</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?x)
										(\\\()							# Opening
										(
											(?&lt;parens&gt;
												(
													[^()"]				# Anything except parens
												  | \(					# Matched pairs of parens
													\g&lt;parens&gt;			#  …that can be nested
													\)
												  | "					# Strings
													([^\\]|\\.)*		# Contents allowing for escapes
													"
												)*
											)
										)
										((\)))							# Closing
									</string>
									<key>name</key>
									<string>meta.embedded.line.swift</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\\.</string>
									<key>name</key>
									<string>invalid.illegal.escape-not-recognized</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>root</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#compiler-control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.swift</string>
	<key>uuid</key>
	<string>8C743E89-9C8D-4833-8149-6500D82AA463</string>
</dict>
</plist>
